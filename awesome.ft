# Awesome!!
print("hello" + " world!")
def (a, b int) sum -> int
    if a == 3
        ret 9
    ret a + b
def x int = sum(4, 3)
def Color
    RED
    GREEN
    PINK
def y int = Color.GREEN
def member ()int = (4, 3, 7, 8, 5, 1)
def p int = member.3
def l int = y
# y = 1
# l = 3
l = 3
def a []int = []
a[3] = 34
def as bool = a[0] == 34
def m {}<int, string> = {
    3: "drift",
    9: "world"
}
m[3] = "lang"
m[2] = "drift"
m[8] = "hello"
def () show -> {}<int, int>
    ret {1: 34, 2: 65, 3: 11}
def sc {}<int, int> = show()
def () fl -> |int, int| -> int
    ret def (a, b int) _ -> int
            ret a + b
def fc |int, int| -> int = fl()
def fs int = fc(43, 17)
def Foo
    def x int = 65
    def p string = "drift-lang"

    def y string = ""

    def () show -> string
        ret p

    def Kind
        Str
        Int

    def (x, y int) max -> int
        if x > y
            ret x
        ret y
def f Foo = new Foo{}
def k Foo = new Foo{x: 43, y: "world"}
def m int = k.x
k.x = 14
def m int = k.x
k.x += 3
def m int = k.x # m: 17
# m = "what?"
def max int = k.max(5, 9)
for def i int = 0; i < 10; i += 1
    print("i = ", i)
    # sleep(1000)
def x int = 0
aop x < 100
    x += 1
    go x % 20 != 0
    print(x)
aop 1
    aop 1
        aop 1
            aop 1
                out ->
            out ->
        out ->
    out ->
def  Human
    \\ eat
    \\ call -> bool
    \string\ say
def Man
    def name string = ""
    def age int = 0

    def () eat
        print(name)
        print("eat")
    
    def (m string) say
        print("say: " + m)

    def () call -> bool
        ret age >= 8
def n Man =
    new Man{name: "baby", age: 10}
print(typeof(n), typeof(Human), typeof(n.eat))
print(
    n.name,
    n.age,
    n.call,
    "hello drift!!"
)
new Man{}.say("你好呀！")
print(n.call() == 1)
def h Human = Human
print("Origi: ", h)
h = n
print("Store: ", h)
print(h, n, h.say)
new Man{}.say("我喜欢你~")
h.say("i am bingxio.")
h.say("love")
# h.test()
def (f Human) do_face
    f.eat()
    f.say("Call inner")
    print(f.call())
do_face(h)
print("TEST END!")
use awesome
use os